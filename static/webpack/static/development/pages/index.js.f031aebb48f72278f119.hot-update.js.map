{"version":3,"file":"static/webpack/static/development/pages/index.js.f031aebb48f72278f119.hot-update.js","sources":["webpack:///./components/MainComponent/MainComponent.js","webpack:///./models/loadFiles.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './MainComponent.module.css';\nimport RunningLogsList from \"../RunningLogsList/RunningLogsList\";\nimport VegaLiteChart from \"../VegaLiteChart/VegaLiteChart\";\nimport {getChartData, getListData} from \"../../models/logData\";\n// import {parse} from \"../../models/logParser\";\nimport {loadFiles} from \"../../models/loadFiles\";\n\nfunction MainComponent(props) {\n    const [logDataArray, setLogDataArray] = useState([]);\n    const [index, setIndex] = useState(0);\n\n    let logsListData = [];\n    let chartData = null;\n    let runData = null;\n\n\n    // Effect to load all data from AWS s3\n    useEffect( () => {\n        const fetchData = async () => {\n            const localDataArray = await loadFiles();\n            // If all data loaded, render list and select first row\n            if (localDataArray.length > 0) {\n                setLogDataArray(localDataArray);             // trigger rendering\n            }\n        };\n\n        if (logDataArray.length === 0) {\n            fetchData();\n        }\n    });\n\n    // Callback to set new chart data and update selected index\n    const logItemClicked = (index) => {\n        setIndex(index);                                     // trigger rendering\n    }\n\n    // Setup data before rendering\n    if (logDataArray.length > 0) {\n        logsListData = logDataArray.map(data => getListData(data))\n\n        let localData = logDataArray[index];\n        chartData = localData.runningTime ? getChartData(localData) : null;\n        runData = getListData(localData);\n    }\n\n    return (\n        <main className={styles.MainComponent}>\n            <RunningLogsList\n                logsListData={logsListData}\n                selectedIndex={index}\n                logItemClicked={logItemClicked}/>\n            <VegaLiteChart data={chartData} runData={runData} />\n        </main>\n    );\n}\n\nexport default MainComponent;\n","import {parse} from \"./logParser\";\n\nexport async function loadFiles() {\n    let logs_api_uri = \"https://bah2tkltg6.execute-api.eu-central-1.amazonaws.com/test/list\";\n\n    let response = await fetch(logs_api_uri);\n    let resp_json_str = await response.json()\n    let keys_list = JSON.parse(resp_json_str.body).keys;\n\n    let promises = keys_list.map (key => fetch(`${logs_api_uri}/${key}`))\n    let respArray = await Promise.all(promises)\n    let json_promises = respArray.map(resp => resp.json())\n    let textArray = await Promise.all(json_promises);\n    let dataArray = textArray.map( e => parse(e.text));\n    dataArray.forEach( (data,i) => data.key = keys_list[i] )\n    dataArray.sort(function(a,b){\n        return new Date(b.runningDate) - new Date(a.runningDate);\n    });\n    return dataArray;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;ACzDA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AAAA;AAAA;AAPA;AAAA;AACA;AADA;AAQA;AACA;AAAA;AAAA;AATA;AAAA;AACA;AADA;AAUA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAfA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}