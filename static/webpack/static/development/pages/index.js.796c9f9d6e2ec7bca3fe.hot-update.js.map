{"version":3,"file":"static/webpack/static/development/pages/index.js.796c9f9d6e2ec7bca3fe.hot-update.js","sources":["webpack:///./models/loadFiles.js","webpack:///./node_modules/node-fetch/browser.js"],"sourcesContent":["import {parse} from \"./logParser\";\nimport fetch from 'node-fetch'\n\nexport async function loadFiles() {\n    let logs_api_uri = \"https://bah2tkltg6.execute-api.eu-central-1.amazonaws.com/test/list\";\n\n    let response = await fetch(logs_api_uri);\n    let resp_json_str = await response.json()\n    let keys_list = JSON.parse(resp_json_str.body).keys;\n\n    let promises = keys_list.map (key => fetch(`${logs_api_uri}/${key}`))\n    let respArray = await Promise.all(promises)\n    let json_promises = respArray.map(resp => resp.json())\n    let textArray = await Promise.all(json_promises);\n    let dataArray = textArray.map( e => parse(e.text));\n    dataArray.forEach( (data,i) => data.key = keys_list[i] )\n    dataArray.sort(function(a,b){\n        return new Date(b.runningDate) - new Date(a.runningDate);\n    });\n    return dataArray;\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AAAA;AAAA;AAPA;AAAA;AACA;AADA;AAQA;AACA;AAAA;AAAA;AATA;AAAA;AACA;AADA;AAUA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAfA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}