{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbol/WebstormProjects/dfm-monitor/components/MainComponent/MainComponent.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styles from './MainComponent.module.css';\nimport RunningLogsList from \"../RunningLogsList/RunningLogsList\";\nimport VegaLiteChart from \"../VegaLiteChart/VegaLiteChart\";\nimport { getChartData, getListData } from \"../../models/logData\"; // import {loadFiles} from \"../../models/loadFiles\";\n\nfunction MainComponent(props) {\n  // const [logDataArray, setLogDataArray] = useState([]);\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  let logDataArray = props.dataArray;\n  let logsListData = [];\n  let chartData = null;\n  let runData = null; // Effect to load all data from AWS s3\n  // useEffect( () => {\n  //     const fetchData = async () => {\n  //         const localDataArray = await loadFiles();\n  //         // If all data loaded, render list and select first row\n  //         if (localDataArray.length > 0) {\n  //             setLogDataArray(localDataArray);             // trigger rendering\n  //         }\n  //     };\n  //\n  //     if (logDataArray.length === 0) {\n  //         fetchData();\n  //     }\n  // });\n  // Callback to set new chart data and update selected index\n\n  const logItemClicked = index => {\n    setIndex(index); // trigger rendering\n  }; // Setup data before rendering\n\n\n  if (logDataArray.length > 0) {\n    logsListData = logDataArray.map(data => getListData(data));\n    let localData = logDataArray[index];\n    chartData = localData.runningTime ? getChartData(localData) : null;\n    runData = getListData(localData);\n  }\n\n  return __jsx(\"main\", {\n    className: styles.MainComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(RunningLogsList, {\n    logsListData: logsListData,\n    selectedIndex: index,\n    logItemClicked: logItemClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), __jsx(VegaLiteChart, {\n    data: chartData,\n    runData: runData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default MainComponent;","map":{"version":3,"sources":["/Users/alexanderbol/WebstormProjects/dfm-monitor/components/MainComponent/MainComponent.js"],"names":["React","useEffect","useState","styles","RunningLogsList","VegaLiteChart","getChartData","getListData","MainComponent","props","index","setIndex","logDataArray","dataArray","logsListData","chartData","runData","logItemClicked","length","map","data","localData","runningTime"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,sBAAxC,C,CACA;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,CAAD,CAAlC;AAEA,MAAIU,YAAY,GAAGH,KAAK,CAACI,SAAzB;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,OAAO,GAAG,IAAd,CAP0B,CAS1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMC,cAAc,GAAIP,KAAD,IAAW;AAC9BC,IAAAA,QAAQ,CAACD,KAAD,CAAR,CAD8B,CACuB;AACxD,GAFD,CAzB0B,CA6B1B;;;AACA,MAAIE,YAAY,CAACM,MAAb,GAAsB,CAA1B,EAA6B;AACzBJ,IAAAA,YAAY,GAAGF,YAAY,CAACO,GAAb,CAAiBC,IAAI,IAAIb,WAAW,CAACa,IAAD,CAApC,CAAf;AAEA,QAAIC,SAAS,GAAGT,YAAY,CAACF,KAAD,CAA5B;AACAK,IAAAA,SAAS,GAAGM,SAAS,CAACC,WAAV,GAAwBhB,YAAY,CAACe,SAAD,CAApC,GAAkD,IAA9D;AACAL,IAAAA,OAAO,GAAGT,WAAW,CAACc,SAAD,CAArB;AACH;;AAED,SACI;AAAM,IAAA,SAAS,EAAElB,MAAM,CAACK,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AACI,IAAA,YAAY,EAAEM,YADlB;AAEI,IAAA,aAAa,EAAEJ,KAFnB;AAGI,IAAA,cAAc,EAAEO,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,MAAC,aAAD;AAAe,IAAA,IAAI,EAAEF,SAArB;AAAgC,IAAA,OAAO,EAAEC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH;;AAED,eAAeR,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './MainComponent.module.css';\nimport RunningLogsList from \"../RunningLogsList/RunningLogsList\";\nimport VegaLiteChart from \"../VegaLiteChart/VegaLiteChart\";\nimport {getChartData, getListData} from \"../../models/logData\";\n// import {loadFiles} from \"../../models/loadFiles\";\n\nfunction MainComponent(props) {\n    // const [logDataArray, setLogDataArray] = useState([]);\n    const [index, setIndex] = useState(0);\n\n    let logDataArray = props.dataArray;\n    let logsListData = [];\n    let chartData = null;\n    let runData = null;\n\n    // Effect to load all data from AWS s3\n    // useEffect( () => {\n    //     const fetchData = async () => {\n    //         const localDataArray = await loadFiles();\n    //         // If all data loaded, render list and select first row\n    //         if (localDataArray.length > 0) {\n    //             setLogDataArray(localDataArray);             // trigger rendering\n    //         }\n    //     };\n    //\n    //     if (logDataArray.length === 0) {\n    //         fetchData();\n    //     }\n    // });\n\n    // Callback to set new chart data and update selected index\n    const logItemClicked = (index) => {\n        setIndex(index);                                     // trigger rendering\n    }\n\n    // Setup data before rendering\n    if (logDataArray.length > 0) {\n        logsListData = logDataArray.map(data => getListData(data))\n\n        let localData = logDataArray[index];\n        chartData = localData.runningTime ? getChartData(localData) : null;\n        runData = getListData(localData);\n    }\n\n    return (\n        <main className={styles.MainComponent}>\n            <RunningLogsList\n                logsListData={logsListData}\n                selectedIndex={index}\n                logItemClicked={logItemClicked}/>\n            <VegaLiteChart data={chartData} runData={runData} />\n        </main>\n    );\n}\n\nexport default MainComponent;\n"]},"metadata":{},"sourceType":"module"}