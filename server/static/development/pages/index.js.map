{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/MainComponent/MainComponent.js","webpack:///./components/MainComponent/MainComponent.module.css","webpack:///./components/RunningLogsList/RunningLogListItem/RunningLogListItem.js","webpack:///./components/RunningLogsList/RunningLogListItem/RunningLogListItem.module.css","webpack:///./components/RunningLogsList/RunningLogsList.js","webpack:///./components/RunningLogsList/RunningLogsList.module.css","webpack:///./components/VegaLiteChart/VegaLiteChart.js","webpack:///./components/VegaLiteChart/VegaLiteChart.module.css","webpack:///./models/loadFiles.js","webpack:///./models/logData.js","webpack:///./models/logParser.js","webpack:///./pages/index.js","webpack:///external \"next/head\"","webpack:///external \"node-fetch\"","webpack:///external \"react\"","webpack:///external \"react-vega\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, {useEffect, useState} from 'react';\nimport styles from './MainComponent.module.css';\nimport RunningLogsList from \"../RunningLogsList/RunningLogsList\";\nimport VegaLiteChart from \"../VegaLiteChart/VegaLiteChart\";\nimport {getChartData, getListData} from \"../../models/logData\";\n// import {loadFiles} from \"../../models/loadFiles\";\n\nfunction MainComponent(props) {\n    // const [logDataArray, setLogDataArray] = useState([]);\n    const [index, setIndex] = useState(0);\n\n    let logDataArray = props.dataArray;\n    let logsListData = [];\n    let chartData = null;\n    let runData = null;\n\n    // Effect to load all data from AWS s3\n    // useEffect( () => {\n    //     const fetchData = async () => {\n    //         const localDataArray = await loadFiles();\n    //         // If all data loaded, render list and select first row\n    //         if (localDataArray.length > 0) {\n    //             setLogDataArray(localDataArray);             // trigger rendering\n    //         }\n    //     };\n    //\n    //     if (logDataArray.length === 0) {\n    //         fetchData();\n    //     }\n    // });\n\n    // Callback to set new chart data and update selected index\n    const logItemClicked = (index) => {\n        setIndex(index);                                     // trigger rendering\n    }\n\n    // Setup data before rendering\n    if (logDataArray.length > 0) {\n        logsListData = logDataArray.map(data => getListData(data))\n\n        let localData = logDataArray[index];\n        chartData = localData.runningTime ? getChartData(localData) : null;\n        runData = getListData(localData);\n    }\n\n    return (\n        <main className={styles.MainComponent}>\n            <RunningLogsList\n                logsListData={logsListData}\n                selectedIndex={index}\n                logItemClicked={logItemClicked}/>\n            <VegaLiteChart data={chartData} runData={runData} />\n        </main>\n    );\n}\n\nexport default MainComponent;\n","// Exports\nmodule.exports = {\n\t\"MainComponent\": \"MainComponent_MainComponent__18PG5\"\n};","import React, {useRef, useEffect} from 'react';\nimport styles from './RunningLogListItem.module.css';\n\nfunction RunningLogsListItem(props) {\n    const refElement = useRef();\n    useEffect( () => {\n        if (props.selected) {\n            scrollIntoView();\n        }\n    })\n\n    let style = props.selected ? styles.RunningLogListItemClicked : styles.RunningLogListItem;\n    style = props.batchFailed ? `${style} ${styles.RunningLogListItemFailed}` : style;\n    let object_url = \"https://s3.console.aws.amazon.com/s3/object/acp-cloud-logs/\"+props.data.key;\n\n    const scrollIntoView = () => {\n        const tableBody = refElement.current.parentElement;\n        const table = tableBody.parentElement;\n        const tableClientRect = table.getBoundingClientRect();\n        const rowClientReact = refElement.current.getBoundingClientRect();\n        if (rowClientReact.bottom > tableClientRect.bottom) {\n            refElement.current.scrollIntoView(false);\n        }\n        if (rowClientReact.top < tableClientRect.top) {\n            refElement.current.scrollIntoView(true);\n        }\n    }\n\n    return (\n        <tr className={style} onClick={props.itemClicked} ref={refElement}>\n            <td>\n                {props.data.runningDate}\n            </td>\n            <td>\n                {props.data.jobName}\n            </td>\n            <td>\n                {props.data.step}\n            </td>\n            <td>\n                {props.data.checklist}\n            </td>\n            <td className={styles.RunningLogListItemNumeric}>\n                {props.data.actionsNum}\n            </td>\n            <td className={styles.RunningLogListItemNumeric}>\n                {props.data.layersNum}\n            </td>\n            <td className={styles.RunningLogListItemNumeric}>\n                {props.data.batchJobsNum}\n            </td>\n            <td>\n                {props.data.runningTime || \"Failed\"}\n            </td>\n            <td>\n                <a href={object_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {props.data.key}\n                </a>\n            </td>\n        </tr>\n    );\n}\n\nexport default RunningLogsListItem;\n","// Exports\nmodule.exports = {\n\t\"RunningLogListItem\": \"RunningLogListItem_RunningLogListItem__1rd6C\",\n\t\"RunningLogListItemClicked\": \"RunningLogListItem_RunningLogListItemClicked__3z7Ap\",\n\t\"RunningLogListItemFailed\": \"RunningLogListItem_RunningLogListItemFailed__1eblQ\",\n\t\"RunningLogListItemNumeric\": \"RunningLogListItem_RunningLogListItemNumeric__3o28S\"\n};","import React, {useEffect} from 'react';\nimport styles from './RunningLogsList.module.css';\nimport RunningLogsListItem from \"./RunningLogListItem/RunningLogListItem\";\n\nfunction RunningLogsList(props) {\n    useEffect( () => {\n        const handleKeyDown = (e) => {\n            switch (e.code) {\n                case \"ArrowDown\":\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (props.selectedIndex < props.logsListData.length-1) {\n                        props.logItemClicked(props.selectedIndex+1);\n                    }\n                    break;\n                case \"ArrowUp\":\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (props.selectedIndex > 0) {\n                        props.logItemClicked(props.selectedIndex-1);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        document.addEventListener('keydown', handleKeyDown);\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    })\n\n    return (\n        <div className={styles.RunningLogsList}>\n            <header>\n                <span>Amazon s3 ></span>\n                <span>\n                    <a href=\"https://s3.console.aws.amazon.com/s3/buckets/acp-cloud-logs/?region=eu-central-1&tab=overview#\"\n                       target=\"_blank\" rel=\"noopener noreferrer\">\n                        acp-cloud-logs\n                    </a>\n                </span>\n            </header>\n            <table className={styles.RunningLogsListTable}>\n                <thead>\n                    <tr>\n                        <th>Running date</th>\n                        <th>Job Name</th>\n                        <th>Step</th>\n                        <th>Checklist</th>\n                        <th># Actions</th>\n                        <th># Layers</th>\n                        <th># ACPs</th>\n                        <th>Running Time</th>\n                        <th>S3 bucket key (filename)</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.logsListData?.map( (data, index) =>\n                        <RunningLogsListItem key={index}\n                                             data={data}\n                                             selected={props.selectedIndex===index}\n                                             batchFailed={!!data.errorTime}\n                                             itemClicked={() => props.logItemClicked(index)}\n                        />\n                    )}\n                </tbody>\n            </table>\n\n        </div>\n    );\n}\n\nexport default RunningLogsList;\n","// Exports\nmodule.exports = {\n\t\"RunningLogsList\": \"RunningLogsList_RunningLogsList__1Lu0w\",\n\t\"RunningLogsListTable\": \"RunningLogsList_RunningLogsListTable__3Z3D4\",\n\t\"fadeIn\": \"RunningLogsList_fadeIn__2InzZ\"\n};","import React from 'react';\nimport { VegaLite } from 'react-vega'\nimport styles from './VegaLiteChart.module.css';\n\nfunction VegaLiteChart(props) {\n    const spec = {\n        title: props.runData?.jobName,\n        data: { values: props.data },\n        mark: { type: \"bar\", tooltip: [] },\n        encoding: {\n            x: {\n                type: \"temporal\",\n                field: \"StartDate\",\n                timeUnit: \"hoursminutesseconds\"\n            },\n            x2: {\n                type: \"temporal\",\n                field: \"EndDate\",\n                timeUnit: \"hoursminutesseconds\"\n            },\n            y: {\n                type: \"nominal\",\n                field: \"Index\",\n                sort: null\n            },\n            color: { field: \"Object\" }\n        },\n        width: 800,\n        // height: 800,\n        autosize: \"fit\"\n    }\n\n    return (\n        <div className={styles.VegaLiteChart}>\n            {\n                props.data && props.runData.runningTime ?\n                    <VegaLite spec={spec} data={props.data}/> : \"No data\"\n            }\n        </div>\n    );\n}\n\nexport default VegaLiteChart;\n","// Exports\nmodule.exports = {\n\t\"VegaLiteChart\": \"VegaLiteChart_VegaLiteChart__C_AQF\"\n};","import {parse} from \"./logParser\";\nimport fetch from 'node-fetch'\n\nexport async function loadFiles() {\n    let logs_api_uri = \"https://bah2tkltg6.execute-api.eu-central-1.amazonaws.com/test/list\";\n\n    let response = await fetch(logs_api_uri);\n    let resp_json_str = await response.json()\n    let keys_list = JSON.parse(resp_json_str.body).keys;\n\n    let promises = keys_list.map (key => fetch(`${logs_api_uri}/${key}`))\n    let respArray = await Promise.all(promises)\n    let json_promises = respArray.map(resp => resp.json())\n    let textArray = await Promise.all(json_promises);\n    let dataArray = textArray.map( e => parse(e.text));\n    dataArray.forEach( (data,i) => data.key = keys_list[i] )\n    dataArray.sort(function(a,b){\n        return new Date(b.runningDate) - new Date(a.runningDate);\n    });\n    return dataArray;\n}\n","export function getChartData(data) {\n    let stats = data.batch.map(action => {\n        let timestamp = data.acpTime.find(\n            a => a.Stage === action.Stage && a.Index === action.StageIndex\n        );\n        return {\n            Object: timestamp.Succeed ? \"Acp\" : \"Acp Failed\",\n            ActNum: action.ActNum,\n            Name: action.AnalysisName,\n            Layer: action.LayerName,\n            Stage: action.Stage,\n            Index: action.Stage + '_' + action.StageIndex,\n            StartTime: timestamp ? timestamp.StartTime : \"\",\n            CompleteTime: timestamp ? timestamp.CompleteTime : \"\",\n            Time: time_diff(timestamp.StartTime, timestamp.CompleteTime),\n            StartDate: new Date(`01/01/1970 ${timestamp.StartTime}`),\n            EndDate: new Date(`01/01/1970 ${timestamp.CompleteTime}`)\n        };\n    });\n\n    let uploadObj = {\n        Object: \"Upload\",\n        Name: \"Upload\",\n        Index: -1,\n        StartDate: new Date(`01/01/1970 ${data.uploadTime.StartTime}`),\n        EndDate: new Date(`01/01/1970 ${data.uploadTime.CompleteTime}`)\n    };\n\n    let splitterObj = {\n        Object: \"Splitter\",\n        Name: \"Splitter\",\n        Index: 0,\n        StartDate: new Date(`01/01/1970 ${data.splitterTime.StartTime}`),\n        EndDate: new Date(`01/01/1970 ${data.splitterTime.CompleteTime}`)\n    };\n\n    let mergerObj;\n    if (data.mergerTime.StartTime && data.mergerTime.CompleteTime) {\n        mergerObj = {\n            Object: \"Merger\",\n            Name: \"Merger\",\n            Index: stats.length + 1,\n            StartDate: new Date(`01/01/1970 ${data.mergerTime.StartTime}`),\n            EndDate: new Date(`01/01/1970 ${data.mergerTime.CompleteTime}`)\n        };\n    }\n\n    let downloadObj;\n    if (data.downloadTime.StartTime && data.downloadTime.CompleteTime) {\n        downloadObj = {\n            Object: \"Download\",\n            Name: \"Download\",\n            Index: stats.length + 2,\n            StartDate: new Date(`01/01/1970 ${data.downloadTime.StartTime}`),\n            EndDate: new Date(`01/01/1970 ${data.downloadTime.CompleteTime}`)\n        };\n    }\n\n    stats = [uploadObj, splitterObj, ...stats];\n    if (mergerObj) stats = [...stats, mergerObj];\n    if (downloadObj) stats = [...stats, downloadObj];\n\n    return stats;\n}\n\n\nexport function getListData(localData) {\n    const actionsNum = localData?.batch[localData.batch.length - 1].ActNum;\n    const layersNum = new Set(localData?.batch.map(action => action.LayerName)).size;\n    return {\n        runningDate: localData?.runningDate,\n        jobName: localData?.jobName,\n        step: localData?.batch[0].StepName,\n        checklist: localData?.batch[0].ChecklistName,\n        actionsNum: actionsNum,\n        layersNum: layersNum,\n        runningTime: localData?.runningTime,\n        batchJobsNum: localData?.batch.length,\n        key: localData?.key,\n        errorTime: localData?.errorTime\n    }\n}\n\nfunction time_diff(start_time, complete_time) {\n    let start = start_time.split(':').map(t => Number(t));\n    let start_sec = start[0] * 3600 + start[1] * 60 + start[2];\n    let complete = complete_time.split(':').map(t => Number(t));\n    let complete_sec = complete[0] * 3600 + complete[1] * 60 + complete[2];\n    let diff_sec = complete_sec - start_sec;\n    return diff_sec;\n}\n","export function parse(text) {\n    const row_lines = text.split('\\n');\n    const arrayOfTimestamps = timestamps(row_lines);\n    const errorTimeString = errorTime(arrayOfTimestamps);\n    return {\n        runningDate: runningDate(row_lines),\n        runningTime: runningTime(row_lines, errorTimeString),\n        jobName: jobName(row_lines),\n        batch: batch(arrayOfTimestamps),\n        uploadTime: uploadTime(arrayOfTimestamps),\n        splitterTime: splitterTime(arrayOfTimestamps),\n        acpTime: acpTime(arrayOfTimestamps),\n        mergerTime: mergerTime(arrayOfTimestamps),\n        downloadTime: downloadTime(arrayOfTimestamps),\n        errorTime: errorTimeString\n    };\n}\n\nfunction jobName(row_lines) {\n    const job_line = row_lines.filter(line => line.match(\"Job:\"))[0];\n    const job_name = job_line.split(' ')[1];\n    return job_name;\n}\n\nfunction runningDate(row_lines) {\n    let arrayOfLines = row_lines.filter(line => line.match(\"time\"));\n    let splitArray = arrayOfLines[0].split(' ');\n    let [day, month, year] = splitArray[1].split(':')[1].split('/');\n    if (day.length > 2) day = day.substr(1);\n    let [hour, min] = splitArray[2].split(':');\n    if (hour.length > 2) hour = hour.substr(1);\n    if (min.length > 2) min = min.substr(1);\n    return new Date(Date.UTC(year, month - 1, day, hour, min)).toUTCString();\n}\n\nfunction runningTime(row_lines, errorTime) {\n    let job_started_line = row_lines\n        .filter(line => line.match(\"Ready for commands\"))[0];\n    let start_time = JSON.parse(job_started_line).time;\n    let job_ended_line = row_lines\n        .filter(line => line.match(\"Job is ready\"));\n    let end_time = job_ended_line.length > 0 ? JSON.parse(job_ended_line).time : errorTime;\n\n    return secToHHMMSS(\n        time_diff(start_time, end_time));\n}\n\n// export function getChartData(data) {\n//     let stats = data.batch.map(action => {\n//         let timestamp = data.acpTime.find(\n//             a => a.Stage === action.Stage && a.Index === action.StageIndex\n//         );\n//         return {\n//             Object: \"Acp\",\n//             ActNum: action.ActNum,\n//             Name: action.AnalysisName,\n//             Layer: action.LayerName,\n//             Stage: action.Stage,\n//             Index: action.StageIndex,\n//             StartTime: timestamp ? timestamp.StartTime : \"\",\n//             CompleteTime: timestamp ? timestamp.CompleteTime : \"\",\n//             Time: time_diff(timestamp.StartTime, timestamp.CompleteTime),\n//             StartDate: new Date(`01/01/1970 ${timestamp.StartTime}`),\n//             EndDate: new Date(`01/01/1970 ${timestamp.CompleteTime}`)\n//         };\n//     });\n\n//     let splitterObj = {\n//         Object: \"Splitter\",\n//         Name: \"Splitter\",\n//         Index: 0,\n//         StartDate: new Date(`01/01/1970 ${data.splitterTime.StartTime}`),\n//         EndDate: new Date(`01/01/1970 ${data.splitterTime.CompleteTime}`)\n//     };\n\n//     let mergerObj = {\n//         Object: \"Merger\",\n//         Name: \"Merger\",\n//         Index: stats.length + 1,\n//         StartDate: new Date(`01/01/1970 ${data.mergerTime.StartTime}`),\n//         EndDate: new Date(`01/01/1970 ${data.mergerTime.CompleteTime}`)\n//     };\n\n//     let uploadObj = {\n//         Object: \"Upload\",\n//         Name: \"Upload\",\n//         Index: -1,\n//         StartDate: new Date(`01/01/1970 ${data.uploadTime.StartTime}`),\n//         EndDate: new Date(`01/01/1970 ${data.uploadTime.CompleteTime}`)\n//     };\n\n//     let downloadObj = {\n//         Object: \"Download\",\n//         Name: \"Download\",\n//         Index: stats.length + 2,\n//         StartDate: new Date(`01/01/1970 ${data.downloadTime.StartTime}`),\n//         EndDate: new Date(`01/01/1970 ${data.downloadTime.CompleteTime}`)\n//     };\n\n//     // stats = [uploadObj, splitterObj, ...stats, mergerObj, downloadTime];\n//     stats = [uploadObj, splitterObj, ...stats, mergerObj, downloadObj];\n//     return stats;\n// }\n\nfunction batch(arrayOfTimestamps) {\n    let batchObject = arrayOfTimestamps.filter(d => d.type === \"Batch\")[0];\n    return JSON.parse(batchObject.message);\n}\n\nfunction uploadTime(arrayOfTimestamps) {\n    let uploadTime = {\n        StartTime: arrayOfTimestamps.find(\n            d => d.object === \"WebClient\" && d.message === \"Job was registered\"\n        ).time,\n        CompleteTime: arrayOfTimestamps.find(\n            d => d.object === \"WebClient\" && d.message === \"After send\"\n        ).time\n    };\n    return uploadTime;\n}\n\nfunction splitterTime(arrayOfTimestamps) {\n    let splitter = arrayOfTimestamps.filter(d => d.object === \"Splitter\")\n    let s = {\n        StartTime: toLocal(\n            splitter.find(s => s.message === \"Splitter started\").time\n        ),\n        CompleteTime: toLocal(splitter.find(s => s.message === \"End of Split\").time)\n    };\n    return s;\n}\n\nfunction mergerTime(arrayOfTimestamps) {\n    let merger = arrayOfTimestamps.filter(d => d.object === \"Merger\");\n    // if (!merger) return null\n\n    let mergerStartMessage = merger.find(s => s.message === \"Preparing job for merge\");\n    let mergerCompleteMessage = merger.find(s => s.message === \"Moving Job to S3\");\n\n    let s = {\n        StartTime: mergerStartMessage ? toLocal(mergerStartMessage.time) : null,\n        CompleteTime: mergerCompleteMessage ? toLocal(mergerCompleteMessage.time) : null\n    };\n    return s;\n}\n\nfunction downloadTime(arrayOfTimestamps) {\n    let downloadStartMessage = arrayOfTimestamps.find(d => d.object === \"WebClient\" && d.message === \"Download Data\");\n    let downloadCompleteMessage = arrayOfTimestamps.find(d => d.object === \"WebClient\" && d.message === \"Job is ready\");\n    let downloadTime = {\n        StartTime: downloadStartMessage ? downloadStartMessage.time : null,\n        CompleteTime: downloadCompleteMessage ? downloadCompleteMessage.time : null\n    };\n    return downloadTime;\n}\n\nfunction acpTime(arrayOfTimestamps) {\n    let errorTimeStr = errorTime(arrayOfTimestamps);\n    let acp = arrayOfTimestamps.filter(d => d.type === \"Progress\");\n    let acp_transformed = acp.map(action => {\n        let message = action.message.split(' ');\n        let localTime = toLocal(action.time);\n        return {\n            Time: localTime,\n            Step: message[0],\n            Stage: message[1].split(':')[1],\n            Index: Number(message[2].split(':')[1])\n        };\n    });\n    let acp_started = acp_transformed\n        .filter(action => action.Step === \"Starting\")\n        .map(action => {\n            return {\n                Stage: action.Stage,\n                Index: action.Index,\n                StartTime: action.Time\n            };\n        });\n    let acp_completed = acp_transformed\n        .filter(action => action.Step === \"Completed\")\n        .map(action => {\n            return {\n                Stage: action.Stage,\n                Index: action.Index,\n                CompleteTime: action.Time\n            };\n        });\n    let acp_timestamp = acp_started.map(action => {\n        let completeTimeMessage = acp_completed.find(\n            c => c.Stage === action.Stage && c.Index === action.Index\n        );\n\n        return {\n            Stage: action.Stage,\n            Index: action.Index,\n            StartTime: action.StartTime,\n            CompleteTime: completeTimeMessage ? completeTimeMessage.CompleteTime : errorTimeStr,\n            Succeed: !!completeTimeMessage\n        };\n    });\n    return acp_timestamp;\n}\n\nfunction errorTime(arrayOfTimestamps) {\n    let errorMessage = arrayOfTimestamps.find(\n        d => d.object === \"WebClient\" && d.type === \"ERROR\"\n    );\n    let errorTime = errorMessage ? errorMessage.time : null;\n    return errorTime;\n}\n\nfunction timestamps(row_lines) {\n    let arrayOfLines = row_lines.filter(line => line.match(\"time\"));\n    let tmpArrayOfLines = [...arrayOfLines];\n    tmpArrayOfLines.splice(0, 1);\n    return tmpArrayOfLines.map(line => JSON.parse(line));\n}\n\nfunction time_diff(start_time, complete_time) {\n    let start = start_time.split(':').map(t => Number(t));\n    let start_sec = start[0] * 3600 + start[1] * 60 + start[2];\n    let complete = complete_time.split(':').map(t => Number(t));\n    let complete_sec = complete[0] * 3600 + complete[1] * 60 + complete[2];\n    let diff_sec = complete_sec - start_sec;\n    return diff_sec;\n}\n\nfunction secToHHMMSS(time) {\n    return new Date(time * 1000).toISOString().substr(11, 8);\n}\n\nfunction toLocal(hhmmss) {\n    if (!hhmmss) return null;\n    let [HH, MM, SS] = hhmmss.split(':');\n    let local = [Number(HH) + 3, MM, SS].join(':');\n    return local;\n}\n","import Head from 'next/head'\nimport MainComponent from \"../components/MainComponent/MainComponent\"\nimport {loadFiles} from \"../models/loadFiles\";\n\nexport default function Home({localDataArray}) {\n  return (\n      <div className=\"container\">\n          <Head>\n              <title>DFM Monitor</title>\n              <link rel=\"icon\" href=\"/favicon.ico\"/>\n          </Head>\n\n          <main>\n              <h1 className=\"title\">\n                  DFM Monitor\n              </h1>\n              <MainComponent dataArray={localDataArray}/>\n\n          </main>\n\n          <footer>\n              <a\n                  href=\"https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n              >\n                  Powered by{' '}\n                  <img src=\"/vercel.svg\" alt=\"Vercel Logo\" className=\"logo\"/>\n              </a>\n          </footer>\n\n          <style jsx>{`\n        .container {\n          min-height: 100vh;\n          padding: 0 0.5rem;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n\n        main {\n          padding: 5rem 0;\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n\n        footer {\n          width: 100%;\n          height: 100px;\n          border-top: 1px solid #eaeaea;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        footer img {\n          margin-left: 0.5rem;\n        }\n\n        footer a {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        a {\n          color: inherit;\n          text-decoration: none;\n        }\n\n        .title a {\n          color: #0070f3;\n          text-decoration: none;\n        }\n\n        .title a:hover,\n        .title a:focus,\n        .title a:active {\n          text-decoration: underline;\n        }\n\n        .title {\n          margin: 0;\n          line-height: 1.15;\n          font-size: 4rem;\n        }\n\n        .title,\n        .description {\n          text-align: center;\n        }\n\n        .description {\n          line-height: 1.5;\n          font-size: 1.5rem;\n        }\n\n        code {\n          background: #fafafa;\n          border-radius: 5px;\n          padding: 0.75rem;\n          font-size: 1.1rem;\n          font-family: Menlo, Monaco, Lucida Console, Liberation Mono,\n            DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;\n        }\n\n        .grid {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex-wrap: wrap;\n\n          max-width: 800px;\n          margin-top: 3rem;\n        }\n\n        .card {\n          margin: 1rem;\n          flex-basis: 45%;\n          padding: 1.5rem;\n          text-align: left;\n          color: inherit;\n          text-decoration: none;\n          border: 1px solid #eaeaea;\n          border-radius: 10px;\n          transition: color 0.15s ease, border-color 0.15s ease;\n        }\n\n        .card:hover,\n        .card:focus,\n        .card:active {\n          color: #0070f3;\n          border-color: #0070f3;\n        }\n\n        .card h3 {\n          margin: 0 0 1rem 0;\n          font-size: 1.5rem;\n        }\n\n        .card p {\n          margin: 0;\n          font-size: 1.25rem;\n          line-height: 1.5;\n        }\n\n        .logo {\n          height: 1em;\n        }\n\n        @media (max-width: 600px) {\n          .grid {\n            width: 100%;\n            flex-direction: column;\n          }\n        }\n      `}</style>\n\n          <style jsx global>{`\n        html,\n        body {\n          padding: 0;\n          margin: 0;\n          font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n            Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue,\n            sans-serif;\n        }\n\n        * {\n          box-sizing: border-box;\n        }\n      `}</style>\n      </div>\n  )\n}\n\nexport async function getStaticProps() {\n    // Get external data from the file system, API, DB, etc.\n    const localDataArray = await loadFiles();\n\n    // The value of the `props` key will be\n    //  passed to the `Home` component\n    return {\n        props: {\n            localDataArray\n        }\n    }\n}\n","module.exports = require(\"next/head\");","module.exports = require(\"node-fetch\");","module.exports = require(\"react\");","module.exports = require(\"react-vega\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;ACxDA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAhBA;AAkBA;AACA;AACA;AAxBA;AA2BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;AC1CA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1FA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5OA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4KA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AADA;AADA;AAKA;;;;;;;;;;;;;;;;;;;;;;;AC/LA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}